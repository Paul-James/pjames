% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grepdf.R
\name{grepdf}
\alias{grepdf}
\title{Grep a data frame: many synergy, much useful, wow}
\usage{
grepdf(df_input, pattern, unique = TRUE, save_df_name = FALSE,
  save_col_name = FALSE, save_pattern = FALSE, tibble = TRUE, ...)
}
\arguments{
\item{df_input}{data frame to search}

\item{pattern}{the literal or regex pattern  to search on (default is regex)}

\item{unique}{return only unique records or all matches?}

\item{save_df_name}{include the input data frame name in the returned results?}

\item{save_col_name}{include the matched value column name in the returned results?}

\item{save_pattern}{include the pattern searched for in the returned results?}

\item{tibble}{return a tibble? set to FALSE for regular data.frame}

\item{...}{additional arguments for grep function}
}
\description{
Grep a data frame and return info about the match: where it is, what it is, accessor fields, and other various metadata about the match in question.
Not optimized and is currently slow on big datasets or many matches. Further work needs to be done to make this faster/efficient.
One of the use case would be to find and replace a pattern wherever it is in the data.
Another use case not yet built in is identify data missingness.
}
\examples{
grepdf(
    df_input = iris
  , pattern  = '3.1|5.9'
  , unique   = FALSE
  , tibble   = FALSE
)
}
\keyword{amortization,}
\keyword{excel,}
\keyword{finance,}
\keyword{payment}
